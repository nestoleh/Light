package com.nestoleh.light.presentation.theme

import androidx.compose.ui.graphics.Color

object LightAppColors {
    val electricityStatusOn = Color(0xFF37A369)
    val electricityStatusOff = Color(0xFFBA5B4D)
    val electricityStatusPossibleOff = Color(0xFFFFDE3F)
    val onElectricityStatusColor = Color(0xFF000000)

    // THEME COLORS
    // light
    val primaryLight = Color(0xFF6D5E0F)
    val onPrimaryLight = Color(0xFFFFFFFF)
    val primaryContainerLight = Color(0xFFF8E287)
    val onPrimaryContainerLight = Color(0xFF221B00)
    val secondaryLight = Color(0xFF665E40)
    val onSecondaryLight = Color(0xFFFFFFFF)
    val secondaryContainerLight = Color(0xFFEEE2BC)
    val onSecondaryContainerLight = Color(0xFF211B04)
    val tertiaryLight = Color(0xFF5D5791)
    val onTertiaryLight = Color(0xFFFFFFFF)
    val tertiaryContainerLight = Color(0xFFE4DFFF)
    val onTertiaryContainerLight = Color(0xFF191249)
    val errorLight = Color(0xFFBA1A1A)
    val onErrorLight = Color(0xFFFFFFFF)
    val errorContainerLight = Color(0xFFFFDAD6)
    val onErrorContainerLight = Color(0xFF410002)
    val backgroundLight = Color(0xFFFFF9EE)
    val onBackgroundLight = Color(0xFF1E1B13)
    val surfaceLight = Color(0xFFFFF9EE)
    val onSurfaceLight = Color(0xFF1E1B13)
    val surfaceVariantLight = Color(0xFFEAE2D0)
    val onSurfaceVariantLight = Color(0xFF4B4739)
    val outlineLight = Color(0xFF7C7767)
    val outlineVariantLight = Color(0xFFCDC6B4)
    val scrimLight = Color(0xFF000000)
    val inverseSurfaceLight = Color(0xFF333027)
    val inverseOnSurfaceLight = Color(0xFFF7F0E2)
    val inversePrimaryLight = Color(0xFFDBC66E)
    val surfaceDimLight = Color(0xFFE0D9CC)
    val surfaceBrightLight = Color(0xFFFFF9EE)
    val surfaceContainerLowestLight = Color(0xFFFFFFFF)
    val surfaceContainerLowLight = Color(0xFFFAF3E5)
    val surfaceContainerLight = Color(0xFFF4EDDF)
    val surfaceContainerHighLight = Color(0xFFEEE8DA)
    val surfaceContainerHighestLight = Color(0xFFE8E2D4)

    // dark
    val primaryDark = Color(0xFFDBC66E)
    val onPrimaryDark = Color(0xFF3A3000)
    val primaryContainerDark = Color(0xFF534600)
    val onPrimaryContainerDark = Color(0xFFF8E287)
    val secondaryDark = Color(0xFFD1C6A1)
    val onSecondaryDark = Color(0xFF363016)
    val secondaryContainerDark = Color(0xFF4E472A)
    val onSecondaryContainerDark = Color(0xFFEEE2BC)
    val tertiaryDark = Color(0xFFC7BFFF)
    val onTertiaryDark = Color(0xFF2F295F)
    val tertiaryContainerDark = Color(0xFF454077)
    val onTertiaryContainerDark = Color(0xFFE4DFFF)
    val errorDark = Color(0xFFFFB4AB)
    val onErrorDark = Color(0xFF690005)
    val errorContainerDark = Color(0xFF93000A)
    val onErrorContainerDark = Color(0xFFFFDAD6)
    val backgroundDark = Color(0xFF15130B)
    val onBackgroundDark = Color(0xFFE8E2D4)
    val surfaceDark = Color(0xFF15130B)
    val onSurfaceDark = Color(0xFFE8E2D4)
    val surfaceVariantDark = Color(0xFF4B4739)
    val onSurfaceVariantDark = Color(0xFFCDC6B4)
    val outlineDark = Color(0xFF969080)
    val outlineVariantDark = Color(0xFF4B4739)
    val scrimDark = Color(0xFF000000)
    val inverseSurfaceDark = Color(0xFFE8E2D4)
    val inverseOnSurfaceDark = Color(0xFF333027)
    val inversePrimaryDark = Color(0xFF6D5E0F)
    val surfaceDimDark = Color(0xFF15130B)
    val surfaceBrightDark = Color(0xFF3C3930)
    val surfaceContainerLowestDark = Color(0xFF100E07)
    val surfaceContainerLowDark = Color(0xFF1E1B13)
    val surfaceContainerDark = Color(0xFF222017)
    val surfaceContainerHighDark = Color(0xFF2D2A21)
    val surfaceContainerHighestDark = Color(0xFF38352B)
}


